{
  "name": "cellmate",
  "publisher": "CellMate",
  "displayName": "CellMate",
  "description": "Our team created an AI-powered feedback system for Jupyter Notebooks, enhancing student learning with AI-driven insights and support. the plugin contains a speech-to-text feature, an explain and expand feature, an error helper, and an AI-feedback button.",
  "repository": {
    "type": "git",
    "url": "https://github.com/teachnology/cellmate/tree/main"
  },
  "version": "0.3.0",
  "engines": {
    "vscode": "^1.75.0"
  },
  "activationEvents": [
    "onNotebook:*"
  ],
  "main": "./out/extension.js",
  "dependencies": {
    "@ffmpeg-installer/ffmpeg": "^1.1.0",
    "axios": "^1.5.0",
    "extract-zip": "^2.0.1",
    "get-port": "^7.1.0",
    "marked": "^16.0.0",
    "simple-git": "^3.28.0",
    "tmp": "^0.2.5"
  },
  "devDependencies": {
    "@types/extract-zip": "^2.0.0",
    "@types/node": "^18.7.18",
    "@types/tmp": "^0.2.6",
    "@types/vscode": "^1.75.0",
    "@vscode/test-electron": "^2.3.0",
    "typescript": "^4.9.5"
  },
  "scripts": {
    "compile": "tsc -p ."
  },
  "contributes": {
    "configuration": [
      {
        "title": "CellMate ‚Ä¢ General",
        "properties": {
          "jupyterAiFeedback.apiUrl": {
            "type": "string",
            "description": "API URL for the LLM service",
            "order": 0
          },
          "jupyterAiFeedback.apiKey": {
            "type": "string",
            "description": "API key for the LLM service",
            "order": 1
          },
          "jupyterAiFeedback.modelName": {
            "type": "string",
            "default": "gpt-oss:120b",
            "description": "The model name used for AI feedback",
            "order": 2
          },
          "jupyterAiFeedback.templateId": {
            "type": "string",
            "default": "standard_feedback",
            "description": "Template ID to use for AI feedback (fetched from GitHub repository)"
          },
          "jupyterAiFeedback.useHiddenTests": {
            "type": "boolean",
            "default": true,
            "description": "Whether to use hidden tests to enhance the prompt with test analysis"
          },
          "jupyterAiFeedback.errorHelperOutput": {
            "type": "string",
            "default": "markdown",
            "enum": [
              "cellOutput",
              "markdown"
            ],
            "enumDescriptions": [
              "Display Error Helper analysis as cell output (HTML)",
              "Display Error Helper analysis as markdown cell below"
            ],
            "description": "Choose how Error Helper displays its analysis"
          },
          "jupyterAiFeedback.errorHelper.alwaysShow": {
            "type": "boolean",
            "default": false,
            "description": "Always show Error Helper button, even when there are no errors in the cell",
            "order": 15
          },
          "jupyterAiFeedback.feedbackMode": {
            "type": "string",
            "default": "Expand",
            "enum": [
              "Expand",
              "Explain"
            ],
            "enumDescriptions": [
              "Expand the feedback for students",
              "Explain the feedback in simpler terms"
            ],
            "description": "Choose how the feedback will be processed by the AI"
          },
          "jupyterAiFeedback.showButtonInAllMarkdown": {
            "type": "boolean",
            "default": false,
            "description": "Show the Expand/Explain button in all markdown cells (not just those containing feedback)"
          }
        }
      },
      {
        "title": "CellMate ‚Ä¢ Speech-to-Text",
        "properties": {
          "jupyterAiFeedback.speechProvider": {
            "type": "string",
            "default": "local",
            "enum": [
              "local",
              "openai",
              "azure"
            ],
            "description": "Speech engine: offline *local* model (default) or cloud providers.",
            "order": 3
          },
          "jupyterAiFeedback.speechLocal.language": {
            "type": "string",
            "default": "en",
            "description": "Language hint for the local model (ISO-639-1).",
            "order": 4
          },
          "jupyterAiFeedback.speechOpenai.apiKey": {
            "type": "string",
            "description": "OpenAI API key (`sk-‚Ä¶`).",
            "order": 5
          },
          "jupyterAiFeedback.speechOpenai.modelId": {
            "type": "string",
            "default": "whisper-1",
            "description": "Model ID (e.g. whisper-1).",
            "order": 6
          },
          "jupyterAiFeedback.speechOpenai.language": {
            "type": "string",
            "default": "en",
            "description": "Language code for OpenAI.",
            "order": 7
          },
          "jupyterAiFeedback.speechAzure.apiKey": {
            "type": "string",
            "description": "Azure Speech API key.",
            "order": 8
          },
          "jupyterAiFeedback.speechAzure.region": {
            "type": "string",
            "default": "westeurope",
            "description": "Azure region.",
            "order": 9
          },
          "jupyterAiFeedback.speechAzure.language": {
            "type": "string",
            "default": "en-US",
            "description": "Language code for Azure.",
            "order": 10
          }
        }
      }
    ],
    "commands": [
      {
        "command": "jupyterAiFeedback.sendNotebookCell",
        "title": "Send Notebook Cell to AI Feedback"
      },
      {
        "command": "jupyterAiFeedback.errorHelper",
        "title": "Error Helper - Get help with cell errors"
      },
      {
        "command": "jupyterAiFeedback.startErrorChat",
        "title": "Start Error Helper Chat"
      },
      {
        "command": "jupyterAiFeedback.listTemplates",
        "title": "List Available Templates"
      },
      {
        "command": "jupyterAiFeedback.listExercises",
        "title": "List Available Exercises"
      },
      {
        "command": "jupyterAiFeedback.selectTemplate",
        "title": "choose Prompt template"
      },
      {
        "command": "jupyterAiFeedback.syncGitRepo",
        "title": "Sync GitHub Repository"
      },
      {
        "command": "jupyterAiFeedback.showPromptContent",
        "title": "Show Prompt Content"
      },
      {
        "command": "jupyterAiFeedback.toggleRecording",
        "title": "üéôÔ∏è Toggle Speech-to-Text Recording"
      },
      {
        "command": "jupyterAiFeedback.askFollowUpFromButton",
        "title": "Ask Follow-up Question (via Button)"
      }
    ],
    "notebookCellStatusBarItemProviders": [
      {
        "viewType": "*",
        "items": [
          {
            "command": "jupyterAiFeedback.errorHelper",
            "alignment": "right",
            "priority": 200
          },
          {
            "command": "jupyterAiFeedback.sendNotebookCell",
            "alignment": "right",
            "priority": 100
          },
          {
            "command": "jupyterAiFeedback.toggleRecording",
            "alignment": "left",
            "priority": 100
          },
          {
            "when": "notebookCellKind == markup",
            "command": "jupyterAiFeedback.explainMarkdownCell",
            "alignment": "right",
            "priority": 100
          }
        ]
      }
    ]
  },
  "extensionDependencies": [
    "ms-python.python"
  ]
}
